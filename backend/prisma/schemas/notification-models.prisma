// Notification-related models for LMS system

// Main notification model for general platform notifications
model Notification {
  notification_id            Int                   @id @default(autoincrement())
  tenant_id                  Int
  title                      String                @db.VarChar(255)
  message                    String                @db.Text
  notification_type          NotificationType      // Updated to use enum instead of Int
  priority                   NotificationPriority  @default(NORMAL) // Updated to use enum instead of Int @default(2)
  sender_id                  Int?                  // Optional reference to the user who sent the notification
  category_id                Int?                  // Optional reference to notification category
  scheduled_at               DateTime?             // When the notification should be delivered
  expires_at                 DateTime?             // When the notification expires/should be removed
  metadata                   Json?                 // Additional dynamic content for the notification
  is_read_receipt_required   Boolean               @default(false)
  target_audience            String?               @db.Text // JSON array of target criteria

  // Audit fields
  is_active                  Boolean               @default(true)
  is_deleted                 Boolean               @default(false)
  created_at                 DateTime              @default(now())
  updated_at                 DateTime              @updatedAt
  created_by                 Int
  updated_by                 Int?
  deleted_at                 DateTime?
  deleted_by                 Int?
  created_ip                 String?               @db.VarChar(45)
  updated_ip                 String?               @db.VarChar(45)

  // Relationships
  tenant                     Tenant                @relation(fields: [tenant_id], references: [tenant_id], onDelete: Restrict)
    
  // Delivery related entities
  notification_deliveries    NotificationDelivery[]
  email_queues               EmailQueue[]
  
  @@map("notifications")
  // Note: Unique constraints and indexes will be implemented via custom SQL in Prisma migrations
}

// Course session announcements for course-specific communications
model CourseSessionAnnouncement {
  announcement_id            Int                   @id @default(autoincrement())
  tenant_id                  Int
  course_session_id          Int                   // Reference to the course session
  teacher_id                 Int                   // Teacher who created the announcement
  title                      String                @db.VarChar(255)
  content                    String                @db.Text
  announcement_type          Int                   @default(1) // 1-GENERAL, 2-ASSIGNMENT_DUE, 3-DEADLINE, etc.
  is_pinned                  Boolean               @default(false)
  is_published               Boolean               @default(true)
  publish_date               DateTime              @default(now())
  expiry_date                DateTime?             // Optional expiration date
  attachment_url             String?               @db.Text
  attachment_type            String?               @db.VarChar(50)
  
  // Audit fields
  is_active                  Boolean               @default(true)
  is_deleted                 Boolean               @default(false)
  created_at                 DateTime              @default(now())
  updated_at                 DateTime              @updatedAt
  created_by                 Int
  updated_by                 Int?
  deleted_at                 DateTime?
  deleted_by                 Int?
  created_ip                 String?               @db.VarChar(45)
  updated_ip                 String?               @db.VarChar(45)

  // Relationships
  tenant                     Tenant                @relation(fields: [tenant_id], references: [tenant_id], onDelete: Restrict)
  course_session             CourseSession         @relation(fields: [course_session_id], references: [course_session_id], onDelete: Cascade)
  teacher                    Teacher               @relation(fields: [teacher_id], references: [teacher_id], onDelete: Restrict)
  
  @@map("course_session_announcements")
  // Note: Unique constraints and indexes will be implemented via custom SQL in Prisma migrations
}

// Related delivery models
model NotificationDelivery {
  notification_delivery_id   Int                   @id @default(autoincrement())
  tenant_id                  Int
  notification_id            Int
  recipient_id               Int                   // ID of the recipient (student_id, teacher_id, etc.)
  recipient_type             RecipientType         // Updated to use enum instead of Int
  delivery_channel           DeliveryChannel       // Updated to use enum instead of Int
  delivery_status            DeliveryStatus        @default(PENDING) // Updated to use enum instead of Int @default(1)
  delivered_at               DateTime?
  read_at                    DateTime?
  dismissed_at               DateTime?
  failure_reason             String?               @db.Text
  retry_count                Int                   @default(0)
  delivery_metadata          Json?                 // Channel-specific metadata

  // Audit fields
  is_active                  Boolean               @default(true)
  is_deleted                 Boolean               @default(false)
  created_at                 DateTime              @default(now())
  updated_at                 DateTime              @updatedAt
  created_by                 Int
  updated_by                 Int?
  deleted_at                 DateTime?
  deleted_by                 Int?
  created_ip                 String?               @db.VarChar(45)
  updated_ip                 String?               @db.VarChar(45)

  // Relationships
  tenant                     Tenant                @relation(fields: [tenant_id], references: [tenant_id], onDelete: Restrict)
  notification               Notification          @relation(fields: [notification_id], references: [notification_id], onDelete: Cascade)
  
  @@map("notification_deliveries")
  // Note: Unique constraints and indexes will be implemented via custom SQL in Prisma migrations
}

model EmailQueue {
  email_queue_id             Int                   @id @default(autoincrement())
  tenant_id                  Int
  notification_id            Int
  recipient_email            String                @db.VarChar(255)
  recipient_name             String?               @db.VarChar(255)
  subject                    String                @db.VarChar(255)
  body_html                  String?               @db.Text
  body_text                  String?               @db.Text
  send_status                EmailSendStatus       @default(PENDING) // Updated to use enum instead of Int @default(1)
  send_attempts              Int                   @default(0)
  last_attempt_at            DateTime?
  sent_at                    DateTime?
  failure_reason             String?               @db.Text
  priority                   Int                   @default(5) // 1-10, higher = more priority
  scheduled_for              DateTime?
  email_provider_id          String?               @db.VarChar(255)

  // Audit fields
  is_active                  Boolean               @default(true)
  is_deleted                 Boolean               @default(false)
  created_at                 DateTime              @default(now())
  updated_at                 DateTime              @default(now())
  created_by                 Int
  updated_by                 Int?
  deleted_at                 DateTime?
  deleted_by                 Int?
  created_ip                 String?               @db.VarChar(45)
  updated_ip                 String?               @db.VarChar(45)

  // Relationships
  tenant                     Tenant                @relation(fields: [tenant_id], references: [tenant_id], onDelete: Restrict)
  notification               Notification          @relation(fields: [notification_id], references: [notification_id], onDelete: Cascade)
  
  @@map("email_queues")
  // Note: Unique constraints and indexes will be implemented via custom SQL in Prisma migrations
}

// Notification templates for reusable message formats
model NotificationTemplate {
  notification_template_id   Int                   @id @default(autoincrement())
  tenant_id                  Int
  template_name              String                @db.VarChar(255)
  template_type              TemplateType          // Updated to use enum
  subject_template           String?               @db.Text // For email templates
  body_template              String                @db.Text
  variables                  Json?                 // Available template variables as JSON array
  is_system_template         Boolean               @default(false) // Whether this is a system-wide template

  // Audit fields
  is_active                  Boolean               @default(true)
  is_deleted                 Boolean               @default(false)
  created_at                 DateTime              @default(now())
  updated_at                 DateTime              @updatedAt
  created_by                 Int
  updated_by                 Int?
  deleted_at                 DateTime?
  deleted_by                 Int?
  created_ip                 String?               @db.VarChar(45)
  updated_ip                 String?               @db.VarChar(45)

  // Relationships
  tenant                     Tenant                @relation(fields: [tenant_id], references: [tenant_id], onDelete: Restrict)
  
  @@map("notification_templates")
  // Note: Unique constraints and indexes will be implemented via custom SQL in Prisma migrations
}

// Push notification devices for mobile/web push notifications
model PushNotificationDevice {
  push_device_id             Int                   @id @default(autoincrement())
  tenant_id                  Int
  user_id                    Int                   // ID of the user (student_id, teacher_id, system_user_id)
  user_type                  RecipientType         // Updated to use enum
  device_token               String                @db.VarChar(500)
  device_type                DeviceType            // Updated to use enum
  app_version                String?               @db.VarChar(50)
  os_version                 String?               @db.VarChar(50)
  is_production              Boolean               @default(true) // Whether this is a production or sandbox token
  last_used_at               DateTime?
  expires_at                 DateTime?

  // Audit fields
  is_active                  Boolean               @default(true)
  is_deleted                 Boolean               @default(false)
  created_at                 DateTime              @default(now())
  updated_at                 DateTime              @updatedAt
  created_by                 Int
  updated_by                 Int?
  deleted_at                 DateTime?
  deleted_by                 Int?
  created_ip                 String?               @db.VarChar(45)
  updated_ip                 String?               @db.VarChar(45)

  // Relationships
  tenant                     Tenant                @relation(fields: [tenant_id], references: [tenant_id], onDelete: Restrict)
  
  @@map("push_notification_devices")
  // Note: Unique constraints and indexes will be implemented via custom SQL in Prisma migrations
}
