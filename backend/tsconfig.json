{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ES2022",                        // Sets the JavaScript language version for emitted code and type checking
    "lib": ["ES2022"],                         // Includes built-in type definitions for ES2022 features
    "experimentalDecorators": true,             // Enables support for experimental decorators (e.g., @Injectable)
    "emitDecoratorMetadata": true,              // Emits metadata for decorators, useful for frameworks like TypeORM/NestJS
    "useDefineForClassFields": true,            // Uses 'define' semantics for class fields (aligns with latest JS spec)

    /* Modules */
    "module": "ESNext",                         // Sets the module code generation (e.g., import/export syntax)
    "moduleResolution": "Bundler",              // Uses bundler-style module resolution (for modern build tools)
    "baseUrl": "./",                            // Base directory for non-relative module names
    "paths": {
      "@/*": ["src/*"],                         // Alias '@' to 'src' directory for cleaner imports
      "@shared/*": ["../shared/*"]              // Alias '@shared' to shared directory for cross-project imports
    },
    "resolveJsonModule": true,                  // Allows importing .json files as modules
    "moduleDetection": "force",                 // Forces all files to be modules unless otherwise specified

    /* Emit - Base Settings */
    "outDir": "./dist",                         // Output directory for compiled JavaScript files
    "removeComments": true,                     // Removes comments from emitted JavaScript
    "noEmitOnError": true,                      // Prevents emitting files if there are type errors

    /* Interop Constraints */
    "isolatedModules": true,                    // Ensures each file can be safely transpiled independently
    "verbatimModuleSyntax": false,              // Allows TypeScript to transform import/export syntax as needed
    "allowSyntheticDefaultImports": true,       // Allows default imports from modules without a default export
    "esModuleInterop": true,                    // Enables interoperability between CommonJS and ES Modules
    "forceConsistentCasingInFileNames": true,   // Ensures file imports respect case sensitivity

    /* Type Checking - Strict Mode */
    "strict": true,                             // Enables all strict type-checking options
    "noImplicitAny": true,                      // Disallows variables with implicit 'any' type
    "strictNullChecks": true,                   // Makes null and undefined distinct types
    "strictFunctionTypes": true,                // Ensures function type parameters are checked strictly
    "strictBindCallApply": true,                // Checks arguments for bind, call, and apply methods
    "strictPropertyInitialization": true,       // Ensures class properties are initialized in the constructor
    "noImplicitThis": true,                     // Disallows 'this' with an implicit 'any' type
    "useUnknownInCatchVariables": true,         // Uses 'unknown' instead of 'any' for catch clause variables
    "alwaysStrict": true,                       // Parses files in strict mode and emits "use strict" in JS

    /* Additional Checks */
    "noUnusedLocals": true,                     // Reports errors on unused local variables
    "noUnusedParameters": true,                 // Reports errors on unused function parameters
    "exactOptionalPropertyTypes": true,         // Makes optional property types strictly match undefined
    "noImplicitReturns": true,                  // Ensures all code paths in a function return a value
    "noFallthroughCasesInSwitch": true,         // Prevents fallthrough between switch cases
    "noUncheckedIndexedAccess": true,           // Adds undefined to types for indexed object access
    "noImplicitOverride": true,                 // Requires 'override' modifier when overriding methods
    "noPropertyAccessFromIndexSignature": true, // Disallows property access from index signatures

    /* JavaScript Support */
    "allowJs": false,                           // Disables JavaScript file compilation
    "checkJs": false,                           // Disables type checking for JavaScript files

    /* Completeness */
    "skipLibCheck": true                        // Skips type checking of declaration files (*.d.ts) for faster builds
  },
  "references": [
    { "path": "../shared" }                     // References the shared project for type sharing and project builds
  ],
  "include": [
    "src/**/*"                                 // Includes all TypeScript files in the src directory
  ],
  "exclude": [
    "node_modules",                            // Excludes dependencies
    "dist",                                    // Excludes build output
    "tests",                                   // Excludes test files
    "**/*.test.ts",                            // Excludes test files by pattern
    "**/*.spec.ts",                            // Excludes spec files by pattern
    "coverage",                                // Excludes coverage reports
    "prisma/migrations"                        // Excludes Prisma migration files
  ]
}